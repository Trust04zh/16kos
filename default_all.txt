+ cc kern/init/entry.S
+ cc kern/init/init.c
+ cc kern/libs/stdio.c
+ cc kern/libs/readline.c
+ cc kern/debug/panic.c
+ cc kern/debug/kdebug.c
+ cc kern/debug/kmonitor.c
+ cc kern/driver/ide.c
+ cc kern/driver/clock.c
+ cc kern/driver/console.c
+ cc kern/driver/intr.c
+ cc kern/trap/trap.c
+ cc kern/trap/trapentry.S
+ cc kern/mm/cundang.c
+ cc kern/mm/pmm.c
+ cc kern/mm/swap_fifo.c
+ cc kern/mm/vmm.c
+ cc kern/mm/kmalloc.c
+ cc kern/mm/swap.c
+ cc kern/mm/default_pmm.c
+ cc kern/mm/best_fit_pmm.c
+ cc kern/mm/buddy_pmm.c
+ cc kern/fs/swapfs.c
+ cc kern/process/entry.S
+ cc kern/process/switch.S
+ cc kern/process/proc.c
+ cc kern/schedule/rr_p_sched.c
+ cc kern/schedule/priority_sched.c
+ cc kern/schedule/sched.c
+ cc kern/schedule/cfs_sched.c
+ cc kern/schedule/default_sched.c
+ cc kern/syscall/syscall.c
+ cc libs/string.c
+ cc libs/printfmt.c
+ cc libs/hash.c
+ cc libs/rand.c
+ cc user/hello.c
+ cc user/libs/panic.c
+ cc user/libs/syscall.c
+ cc user/libs/ulib.c
+ cc user/libs/initcode.S
+ cc user/libs/stdio.c
+ cc user/libs/umain.c
+ cc user/rr.c
+ cc user/forktest.c
+ cc user/ex3.c
+ cc user/print_add.c
+ ld bin/kernel
riscv64-unknown-elf-objcopy bin/kernel --strip-all -O binary bin/ucore.bin

OpenSBI v0.6
   ____                    _____ ____ _____
  / __ \                  / ____|  _ \_   _|
 | |  | |_ __   ___ _ __ | (___ | |_) || |
 | |  | | '_ \ / _ \ '_ \ \___ \|  _ < | |
 | |__| | |_) |  __/ | | |____) | |_) || |_
  \____/| .__/ \___|_| |_|_____/|____/_____|
        | |
        |_|

Platform Name          : QEMU Virt Machine
Platform HART Features : RV64ACDFIMSU
Platform Max HARTs     : 8
Current Hart           : 0
Firmware Base          : 0x80000000
Firmware Size          : 120 KB
Runtime SBI Version    : 0.2

MIDELEG : 0x0000000000000222
MEDELEG : 0x000000000000b109
PMP0    : 0x0000000080000000-0x000000008001ffff (A)
PMP1    : 0x0000000000000000-0xffffffffffffffff (A,R,W,X)
OS is loading ...

memory management: best_fit_pmm_manager
membegin 80200000 memend 88000000 mem_size 7e00000
physcial memory map:
  memory: 0x07e00000, [0x80200000, 0x87ffffff].
in best_fit_init_memmap, n is 7996 
 page2pa(page):80310000
nr_free_store : 7984
p0+5 ppa: 80324000
p0+2 ppa: 80318000
check_alloc_page() succeeded!
check_pgdir() succeeded!
check_boot_pgdir() succeeded!
sched class: RR_scheduler
start the proc_init function
SWAP: manager = fifo swap manager
pa: 80314000
pa: 80328000
total is 7991, nr_free_pages() is 7991
 BEGIN check_swap: count 2, total 7991
setup Page Table for vaddr 0x4000, so alloc a page
setup Page Table vaddr 0~16MB OVER!
set up init env for check_swap begin!
Store/AMO page fault
page fault at 0x0000000000004000: K/W
Store/AMO page fault
page fault at 0x0000000000008000: K/W
Store/AMO page fault
page fault at 0x000000000000c000: K/W
Store/AMO page fault
page fault at 0x0000000000010000: K/W
set up init env for check_swap over!
write Virt Page c in fifo_check_swap
write Virt Page a in fifo_check_swap
write Virt Page d in fifo_check_swap
write Virt Page b in fifo_check_swap
write Virt Page e in fifo_check_swap
Store/AMO page fault
page fault at 0x0000000000014000: K/W
swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 2
write Virt Page b in fifo_check_swap
write Virt Page a in fifo_check_swap
Store/AMO page fault
page fault at 0x0000000000004000: K/W
swap_out: i 0, store page in vaddr 0x8000 to disk swap entry 3
swap_in: load disk swap entry 2 with swap_page in vadr 0x4000
write Virt Page b in fifo_check_swap
Store/AMO page fault
page fault at 0x0000000000008000: K/W
swap_out: i 0, store page in vaddr 0xc000 to disk swap entry 4
swap_in: load disk swap entry 3 with swap_page in vadr 0x8000
write Virt Page c in fifo_check_swap
Store/AMO page fault
page fault at 0x000000000000c000: K/W
swap_out: i 0, store page in vaddr 0x10000 to disk swap entry 5
swap_in: load disk swap entry 4 with swap_page in vadr 0xc000
write Virt Page d in fifo_check_swap
Store/AMO page fault
page fault at 0x0000000000010000: K/W
swap_out: i 0, store page in vaddr 0x14000 to disk swap entry 6
swap_in: load disk swap entry 5 with swap_page in vadr 0x10000
write Virt Page e in fifo_check_swap
Store/AMO page fault
page fault at 0x0000000000014000: K/W
swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 2
swap_in: load disk swap entry 6 with swap_page in vadr 0x14000
write Virt Page a in fifo_check_swap
Load page fault
page fault at 0x0000000000004000: K/R
swap_out: i 0, store page in vaddr 0x8000 to disk swap entry 3
swap_in: load disk swap entry 2 with swap_page in vadr 0x4000
count is 1, total is 6
check_swap() succeeded!
setup timer interrupts
Start run the idle process
The next proc is pid:1
The next proc is pid:2
kernel_execve: pid = 2, name = "rr".
Breakpoint
main: fork ok,now need to wait pids.
The next proc is pid:3
The next proc is pid:4
The next proc is pid:5
The next proc is pid:6
The next proc is pid:7
The next proc is pid:3
The next proc is pid:4
The next proc is pid:5
The next proc is pid:6
The next proc is pid:7
The next proc is pid:3
The next proc is pid:4
The next proc is pid:5
The next proc is pid:6
The next proc is pid:7
The next proc is pid:3
The next proc is pid:4
QEMU: Terminated
